// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// CreateBudgetCreateBudgetBudgetResponse includes the requested fields of the GraphQL type BudgetResponse.
type CreateBudgetCreateBudgetBudgetResponse struct {
	Id       string                                                          `json:"id"`
	Owner    string                                                          `json:"owner"`
	Name     string                                                          `json:"name"`
	Incomes  []CreateBudgetCreateBudgetBudgetResponseIncomesIncomeResponse   `json:"incomes"`
	Expenses []CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse `json:"expenses"`
}

// GetId returns CreateBudgetCreateBudgetBudgetResponse.Id, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponse) GetId() string { return v.Id }

// GetOwner returns CreateBudgetCreateBudgetBudgetResponse.Owner, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponse) GetOwner() string { return v.Owner }

// GetName returns CreateBudgetCreateBudgetBudgetResponse.Name, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponse) GetName() string { return v.Name }

// GetIncomes returns CreateBudgetCreateBudgetBudgetResponse.Incomes, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponse) GetIncomes() []CreateBudgetCreateBudgetBudgetResponseIncomesIncomeResponse {
	return v.Incomes
}

// GetExpenses returns CreateBudgetCreateBudgetBudgetResponse.Expenses, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponse) GetExpenses() []CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse {
	return v.Expenses
}

// CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse includes the requested fields of the GraphQL type ExpenseResponse.
type CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse struct {
	Category string  `json:"category"`
	Amount   float64 `json:"amount"`
	IsFixed  bool    `json:"isFixed"`
	IsSlack  bool    `json:"isSlack"`
}

// GetCategory returns CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse.Category, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse) GetCategory() string {
	return v.Category
}

// GetAmount returns CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse.Amount, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse) GetAmount() float64 {
	return v.Amount
}

// GetIsFixed returns CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse.IsFixed, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse) GetIsFixed() bool {
	return v.IsFixed
}

// GetIsSlack returns CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse.IsSlack, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponseExpensesExpenseResponse) GetIsSlack() bool {
	return v.IsSlack
}

// CreateBudgetCreateBudgetBudgetResponseIncomesIncomeResponse includes the requested fields of the GraphQL type IncomeResponse.
type CreateBudgetCreateBudgetBudgetResponseIncomesIncomeResponse struct {
	Source string  `json:"source"`
	Amount float64 `json:"amount"`
}

// GetSource returns CreateBudgetCreateBudgetBudgetResponseIncomesIncomeResponse.Source, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponseIncomesIncomeResponse) GetSource() string {
	return v.Source
}

// GetAmount returns CreateBudgetCreateBudgetBudgetResponseIncomesIncomeResponse.Amount, and is useful for accessing the field via an interface.
func (v *CreateBudgetCreateBudgetBudgetResponseIncomesIncomeResponse) GetAmount() float64 {
	return v.Amount
}

// CreateBudgetResponse is returned by CreateBudget on success.
type CreateBudgetResponse struct {
	CreateBudget CreateBudgetCreateBudgetBudgetResponse `json:"createBudget"`
}

// GetCreateBudget returns CreateBudgetResponse.CreateBudget, and is useful for accessing the field via an interface.
func (v *CreateBudgetResponse) GetCreateBudget() CreateBudgetCreateBudgetBudgetResponse {
	return v.CreateBudget
}

type ExpenseInput struct {
	Category string  `json:"category"`
	Amount   float64 `json:"amount"`
	IsFixed  bool    `json:"isFixed"`
	IsSlack  bool    `json:"isSlack"`
}

// GetCategory returns ExpenseInput.Category, and is useful for accessing the field via an interface.
func (v *ExpenseInput) GetCategory() string { return v.Category }

// GetAmount returns ExpenseInput.Amount, and is useful for accessing the field via an interface.
func (v *ExpenseInput) GetAmount() float64 { return v.Amount }

// GetIsFixed returns ExpenseInput.IsFixed, and is useful for accessing the field via an interface.
func (v *ExpenseInput) GetIsFixed() bool { return v.IsFixed }

// GetIsSlack returns ExpenseInput.IsSlack, and is useful for accessing the field via an interface.
func (v *ExpenseInput) GetIsSlack() bool { return v.IsSlack }

// GetBudgetBudgetBudgetResponse includes the requested fields of the GraphQL type BudgetResponse.
type GetBudgetBudgetBudgetResponse struct {
	Id       string                                                 `json:"id"`
	Name     string                                                 `json:"name"`
	Incomes  []GetBudgetBudgetBudgetResponseIncomesIncomeResponse   `json:"incomes"`
	Expenses []GetBudgetBudgetBudgetResponseExpensesExpenseResponse `json:"expenses"`
}

// GetId returns GetBudgetBudgetBudgetResponse.Id, and is useful for accessing the field via an interface.
func (v *GetBudgetBudgetBudgetResponse) GetId() string { return v.Id }

// GetName returns GetBudgetBudgetBudgetResponse.Name, and is useful for accessing the field via an interface.
func (v *GetBudgetBudgetBudgetResponse) GetName() string { return v.Name }

// GetIncomes returns GetBudgetBudgetBudgetResponse.Incomes, and is useful for accessing the field via an interface.
func (v *GetBudgetBudgetBudgetResponse) GetIncomes() []GetBudgetBudgetBudgetResponseIncomesIncomeResponse {
	return v.Incomes
}

// GetExpenses returns GetBudgetBudgetBudgetResponse.Expenses, and is useful for accessing the field via an interface.
func (v *GetBudgetBudgetBudgetResponse) GetExpenses() []GetBudgetBudgetBudgetResponseExpensesExpenseResponse {
	return v.Expenses
}

// GetBudgetBudgetBudgetResponseExpensesExpenseResponse includes the requested fields of the GraphQL type ExpenseResponse.
type GetBudgetBudgetBudgetResponseExpensesExpenseResponse struct {
	Category string  `json:"category"`
	Amount   float64 `json:"amount"`
	IsFixed  bool    `json:"isFixed"`
	IsSlack  bool    `json:"isSlack"`
}

// GetCategory returns GetBudgetBudgetBudgetResponseExpensesExpenseResponse.Category, and is useful for accessing the field via an interface.
func (v *GetBudgetBudgetBudgetResponseExpensesExpenseResponse) GetCategory() string {
	return v.Category
}

// GetAmount returns GetBudgetBudgetBudgetResponseExpensesExpenseResponse.Amount, and is useful for accessing the field via an interface.
func (v *GetBudgetBudgetBudgetResponseExpensesExpenseResponse) GetAmount() float64 { return v.Amount }

// GetIsFixed returns GetBudgetBudgetBudgetResponseExpensesExpenseResponse.IsFixed, and is useful for accessing the field via an interface.
func (v *GetBudgetBudgetBudgetResponseExpensesExpenseResponse) GetIsFixed() bool { return v.IsFixed }

// GetIsSlack returns GetBudgetBudgetBudgetResponseExpensesExpenseResponse.IsSlack, and is useful for accessing the field via an interface.
func (v *GetBudgetBudgetBudgetResponseExpensesExpenseResponse) GetIsSlack() bool { return v.IsSlack }

// GetBudgetBudgetBudgetResponseIncomesIncomeResponse includes the requested fields of the GraphQL type IncomeResponse.
type GetBudgetBudgetBudgetResponseIncomesIncomeResponse struct {
	Source string  `json:"source"`
	Amount float64 `json:"amount"`
}

// GetSource returns GetBudgetBudgetBudgetResponseIncomesIncomeResponse.Source, and is useful for accessing the field via an interface.
func (v *GetBudgetBudgetBudgetResponseIncomesIncomeResponse) GetSource() string { return v.Source }

// GetAmount returns GetBudgetBudgetBudgetResponseIncomesIncomeResponse.Amount, and is useful for accessing the field via an interface.
func (v *GetBudgetBudgetBudgetResponseIncomesIncomeResponse) GetAmount() float64 { return v.Amount }

// GetBudgetResponse is returned by GetBudget on success.
type GetBudgetResponse struct {
	Budget GetBudgetBudgetBudgetResponse `json:"budget"`
}

// GetBudget returns GetBudgetResponse.Budget, and is useful for accessing the field via an interface.
func (v *GetBudgetResponse) GetBudget() GetBudgetBudgetBudgetResponse { return v.Budget }

type IncomeInput struct {
	Source string  `json:"source"`
	Amount float64 `json:"amount"`
}

// GetSource returns IncomeInput.Source, and is useful for accessing the field via an interface.
func (v *IncomeInput) GetSource() string { return v.Source }

// GetAmount returns IncomeInput.Amount, and is useful for accessing the field via an interface.
func (v *IncomeInput) GetAmount() float64 { return v.Amount }

// ListBudgetsBudgetsBudgetResponse includes the requested fields of the GraphQL type BudgetResponse.
type ListBudgetsBudgetsBudgetResponse struct {
	Id       string                                                    `json:"id"`
	Name     string                                                    `json:"name"`
	Incomes  []ListBudgetsBudgetsBudgetResponseIncomesIncomeResponse   `json:"incomes"`
	Expenses []ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse `json:"expenses"`
}

// GetId returns ListBudgetsBudgetsBudgetResponse.Id, and is useful for accessing the field via an interface.
func (v *ListBudgetsBudgetsBudgetResponse) GetId() string { return v.Id }

// GetName returns ListBudgetsBudgetsBudgetResponse.Name, and is useful for accessing the field via an interface.
func (v *ListBudgetsBudgetsBudgetResponse) GetName() string { return v.Name }

// GetIncomes returns ListBudgetsBudgetsBudgetResponse.Incomes, and is useful for accessing the field via an interface.
func (v *ListBudgetsBudgetsBudgetResponse) GetIncomes() []ListBudgetsBudgetsBudgetResponseIncomesIncomeResponse {
	return v.Incomes
}

// GetExpenses returns ListBudgetsBudgetsBudgetResponse.Expenses, and is useful for accessing the field via an interface.
func (v *ListBudgetsBudgetsBudgetResponse) GetExpenses() []ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse {
	return v.Expenses
}

// ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse includes the requested fields of the GraphQL type ExpenseResponse.
type ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse struct {
	Category string  `json:"category"`
	Amount   float64 `json:"amount"`
	IsFixed  bool    `json:"isFixed"`
	IsSlack  bool    `json:"isSlack"`
}

// GetCategory returns ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse.Category, and is useful for accessing the field via an interface.
func (v *ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse) GetCategory() string {
	return v.Category
}

// GetAmount returns ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse.Amount, and is useful for accessing the field via an interface.
func (v *ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse) GetAmount() float64 {
	return v.Amount
}

// GetIsFixed returns ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse.IsFixed, and is useful for accessing the field via an interface.
func (v *ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse) GetIsFixed() bool { return v.IsFixed }

// GetIsSlack returns ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse.IsSlack, and is useful for accessing the field via an interface.
func (v *ListBudgetsBudgetsBudgetResponseExpensesExpenseResponse) GetIsSlack() bool { return v.IsSlack }

// ListBudgetsBudgetsBudgetResponseIncomesIncomeResponse includes the requested fields of the GraphQL type IncomeResponse.
type ListBudgetsBudgetsBudgetResponseIncomesIncomeResponse struct {
	Source string  `json:"source"`
	Amount float64 `json:"amount"`
}

// GetSource returns ListBudgetsBudgetsBudgetResponseIncomesIncomeResponse.Source, and is useful for accessing the field via an interface.
func (v *ListBudgetsBudgetsBudgetResponseIncomesIncomeResponse) GetSource() string { return v.Source }

// GetAmount returns ListBudgetsBudgetsBudgetResponseIncomesIncomeResponse.Amount, and is useful for accessing the field via an interface.
func (v *ListBudgetsBudgetsBudgetResponseIncomesIncomeResponse) GetAmount() float64 { return v.Amount }

// ListBudgetsResponse is returned by ListBudgets on success.
type ListBudgetsResponse struct {
	Budgets []ListBudgetsBudgetsBudgetResponse `json:"budgets"`
}

// GetBudgets returns ListBudgetsResponse.Budgets, and is useful for accessing the field via an interface.
func (v *ListBudgetsResponse) GetBudgets() []ListBudgetsBudgetsBudgetResponse { return v.Budgets }

// ListExpendituresExpendituresExpenditureResponse includes the requested fields of the GraphQL type ExpenditureResponse.
type ListExpendituresExpendituresExpenditureResponse struct {
	Id              string `json:"id"`
	Name            string `json:"name"`
	Amount          string `json:"amount"`
	Date            string `json:"date"`
	Method          string `json:"method"`
	Budget_category string `json:"budget_category"`
	Reward_category string `json:"reward_category"`
	Comment         string `json:"comment"`
	Created         string `json:"created"`
	Source          string `json:"source"`
}

// GetId returns ListExpendituresExpendituresExpenditureResponse.Id, and is useful for accessing the field via an interface.
func (v *ListExpendituresExpendituresExpenditureResponse) GetId() string { return v.Id }

// GetName returns ListExpendituresExpendituresExpenditureResponse.Name, and is useful for accessing the field via an interface.
func (v *ListExpendituresExpendituresExpenditureResponse) GetName() string { return v.Name }

// GetAmount returns ListExpendituresExpendituresExpenditureResponse.Amount, and is useful for accessing the field via an interface.
func (v *ListExpendituresExpendituresExpenditureResponse) GetAmount() string { return v.Amount }

// GetDate returns ListExpendituresExpendituresExpenditureResponse.Date, and is useful for accessing the field via an interface.
func (v *ListExpendituresExpendituresExpenditureResponse) GetDate() string { return v.Date }

// GetMethod returns ListExpendituresExpendituresExpenditureResponse.Method, and is useful for accessing the field via an interface.
func (v *ListExpendituresExpendituresExpenditureResponse) GetMethod() string { return v.Method }

// GetBudget_category returns ListExpendituresExpendituresExpenditureResponse.Budget_category, and is useful for accessing the field via an interface.
func (v *ListExpendituresExpendituresExpenditureResponse) GetBudget_category() string {
	return v.Budget_category
}

// GetReward_category returns ListExpendituresExpendituresExpenditureResponse.Reward_category, and is useful for accessing the field via an interface.
func (v *ListExpendituresExpendituresExpenditureResponse) GetReward_category() string {
	return v.Reward_category
}

// GetComment returns ListExpendituresExpendituresExpenditureResponse.Comment, and is useful for accessing the field via an interface.
func (v *ListExpendituresExpendituresExpenditureResponse) GetComment() string { return v.Comment }

// GetCreated returns ListExpendituresExpendituresExpenditureResponse.Created, and is useful for accessing the field via an interface.
func (v *ListExpendituresExpendituresExpenditureResponse) GetCreated() string { return v.Created }

// GetSource returns ListExpendituresExpendituresExpenditureResponse.Source, and is useful for accessing the field via an interface.
func (v *ListExpendituresExpendituresExpenditureResponse) GetSource() string { return v.Source }

// ListExpendituresResponse is returned by ListExpenditures on success.
type ListExpendituresResponse struct {
	Expenditures []ListExpendituresExpendituresExpenditureResponse `json:"expenditures"`
}

// GetExpenditures returns ListExpendituresResponse.Expenditures, and is useful for accessing the field via an interface.
func (v *ListExpendituresResponse) GetExpenditures() []ListExpendituresExpendituresExpenditureResponse {
	return v.Expenditures
}

// UpdateBudgetResponse is returned by UpdateBudget on success.
type UpdateBudgetResponse struct {
	UpdateBudget UpdateBudgetUpdateBudgetBudgetResponse `json:"updateBudget"`
}

// GetUpdateBudget returns UpdateBudgetResponse.UpdateBudget, and is useful for accessing the field via an interface.
func (v *UpdateBudgetResponse) GetUpdateBudget() UpdateBudgetUpdateBudgetBudgetResponse {
	return v.UpdateBudget
}

// UpdateBudgetUpdateBudgetBudgetResponse includes the requested fields of the GraphQL type BudgetResponse.
type UpdateBudgetUpdateBudgetBudgetResponse struct {
	Id       string                                                          `json:"id"`
	Owner    string                                                          `json:"owner"`
	Name     string                                                          `json:"name"`
	Incomes  []UpdateBudgetUpdateBudgetBudgetResponseIncomesIncomeResponse   `json:"incomes"`
	Expenses []UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse `json:"expenses"`
}

// GetId returns UpdateBudgetUpdateBudgetBudgetResponse.Id, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponse) GetId() string { return v.Id }

// GetOwner returns UpdateBudgetUpdateBudgetBudgetResponse.Owner, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponse) GetOwner() string { return v.Owner }

// GetName returns UpdateBudgetUpdateBudgetBudgetResponse.Name, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponse) GetName() string { return v.Name }

// GetIncomes returns UpdateBudgetUpdateBudgetBudgetResponse.Incomes, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponse) GetIncomes() []UpdateBudgetUpdateBudgetBudgetResponseIncomesIncomeResponse {
	return v.Incomes
}

// GetExpenses returns UpdateBudgetUpdateBudgetBudgetResponse.Expenses, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponse) GetExpenses() []UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse {
	return v.Expenses
}

// UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse includes the requested fields of the GraphQL type ExpenseResponse.
type UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse struct {
	Category string  `json:"category"`
	Amount   float64 `json:"amount"`
	IsFixed  bool    `json:"isFixed"`
	IsSlack  bool    `json:"isSlack"`
}

// GetCategory returns UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse.Category, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse) GetCategory() string {
	return v.Category
}

// GetAmount returns UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse.Amount, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse) GetAmount() float64 {
	return v.Amount
}

// GetIsFixed returns UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse.IsFixed, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse) GetIsFixed() bool {
	return v.IsFixed
}

// GetIsSlack returns UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse.IsSlack, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponseExpensesExpenseResponse) GetIsSlack() bool {
	return v.IsSlack
}

// UpdateBudgetUpdateBudgetBudgetResponseIncomesIncomeResponse includes the requested fields of the GraphQL type IncomeResponse.
type UpdateBudgetUpdateBudgetBudgetResponseIncomesIncomeResponse struct {
	Source string  `json:"source"`
	Amount float64 `json:"amount"`
}

// GetSource returns UpdateBudgetUpdateBudgetBudgetResponseIncomesIncomeResponse.Source, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponseIncomesIncomeResponse) GetSource() string {
	return v.Source
}

// GetAmount returns UpdateBudgetUpdateBudgetBudgetResponseIncomesIncomeResponse.Amount, and is useful for accessing the field via an interface.
func (v *UpdateBudgetUpdateBudgetBudgetResponseIncomesIncomeResponse) GetAmount() float64 {
	return v.Amount
}

// __CreateBudgetInput is used internally by genqlient
type __CreateBudgetInput struct {
	Name     string         `json:"name"`
	Incomes  []IncomeInput  `json:"incomes"`
	Expenses []ExpenseInput `json:"expenses"`
}

// GetName returns __CreateBudgetInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateBudgetInput) GetName() string { return v.Name }

// GetIncomes returns __CreateBudgetInput.Incomes, and is useful for accessing the field via an interface.
func (v *__CreateBudgetInput) GetIncomes() []IncomeInput { return v.Incomes }

// GetExpenses returns __CreateBudgetInput.Expenses, and is useful for accessing the field via an interface.
func (v *__CreateBudgetInput) GetExpenses() []ExpenseInput { return v.Expenses }

// __GetBudgetInput is used internally by genqlient
type __GetBudgetInput struct {
	Id string `json:"id"`
}

// GetId returns __GetBudgetInput.Id, and is useful for accessing the field via an interface.
func (v *__GetBudgetInput) GetId() string { return v.Id }

// __ListBudgetsInput is used internally by genqlient
type __ListBudgetsInput struct {
	First int `json:"first"`
}

// GetFirst returns __ListBudgetsInput.First, and is useful for accessing the field via an interface.
func (v *__ListBudgetsInput) GetFirst() int { return v.First }

// __ListExpendituresInput is used internally by genqlient
type __ListExpendituresInput struct {
	Since string `json:"since"`
	Until string `json:"until"`
	First int    `json:"first"`
}

// GetSince returns __ListExpendituresInput.Since, and is useful for accessing the field via an interface.
func (v *__ListExpendituresInput) GetSince() string { return v.Since }

// GetUntil returns __ListExpendituresInput.Until, and is useful for accessing the field via an interface.
func (v *__ListExpendituresInput) GetUntil() string { return v.Until }

// GetFirst returns __ListExpendituresInput.First, and is useful for accessing the field via an interface.
func (v *__ListExpendituresInput) GetFirst() int { return v.First }

// __UpdateBudgetInput is used internally by genqlient
type __UpdateBudgetInput struct {
	Id       string         `json:"id"`
	Name     string         `json:"name"`
	Incomes  []IncomeInput  `json:"incomes"`
	Expenses []ExpenseInput `json:"expenses"`
}

// GetId returns __UpdateBudgetInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateBudgetInput) GetId() string { return v.Id }

// GetName returns __UpdateBudgetInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateBudgetInput) GetName() string { return v.Name }

// GetIncomes returns __UpdateBudgetInput.Incomes, and is useful for accessing the field via an interface.
func (v *__UpdateBudgetInput) GetIncomes() []IncomeInput { return v.Incomes }

// GetExpenses returns __UpdateBudgetInput.Expenses, and is useful for accessing the field via an interface.
func (v *__UpdateBudgetInput) GetExpenses() []ExpenseInput { return v.Expenses }

// The query or mutation executed by CreateBudget.
const CreateBudget_Operation = `
mutation CreateBudget ($name: String!, $incomes: [IncomeInput], $expenses: [ExpenseInput]) {
	createBudget(input: {name:$name,incomes:$incomes,expenses:$expenses}) {
		id
		owner
		name
		incomes {
			source
			amount
		}
		expenses {
			category
			amount
			isFixed
			isSlack
		}
	}
}
`

func CreateBudget(
	ctx_ context.Context,
	client_ graphql.Client,
	name string,
	incomes []IncomeInput,
	expenses []ExpenseInput,
) (*CreateBudgetResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateBudget",
		Query:  CreateBudget_Operation,
		Variables: &__CreateBudgetInput{
			Name:     name,
			Incomes:  incomes,
			Expenses: expenses,
		},
	}
	var err_ error

	var data_ CreateBudgetResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetBudget.
const GetBudget_Operation = `
query GetBudget ($id: ID) {
	budget(id: $id) {
		id
		name
		incomes {
			source
			amount
		}
		expenses {
			category
			amount
			isFixed
			isSlack
		}
	}
}
`

func GetBudget(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*GetBudgetResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetBudget",
		Query:  GetBudget_Operation,
		Variables: &__GetBudgetInput{
			Id: id,
		},
	}
	var err_ error

	var data_ GetBudgetResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ListBudgets.
const ListBudgets_Operation = `
query ListBudgets ($first: Int) {
	budgets(first: $first) {
		id
		name
		incomes {
			source
			amount
		}
		expenses {
			category
			amount
			isFixed
			isSlack
		}
	}
}
`

func ListBudgets(
	ctx_ context.Context,
	client_ graphql.Client,
	first int,
) (*ListBudgetsResponse, error) {
	req_ := &graphql.Request{
		OpName: "ListBudgets",
		Query:  ListBudgets_Operation,
		Variables: &__ListBudgetsInput{
			First: first,
		},
	}
	var err_ error

	var data_ ListBudgetsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ListExpenditures.
const ListExpenditures_Operation = `
query ListExpenditures ($since: String, $until: String, $first: Int) {
	expenditures(since: $since, until: $until, count: $first) {
		id
		name
		amount
		date
		method
		budget_category
		reward_category
		comment
		created
		source
	}
}
`

func ListExpenditures(
	ctx_ context.Context,
	client_ graphql.Client,
	since string,
	until string,
	first int,
) (*ListExpendituresResponse, error) {
	req_ := &graphql.Request{
		OpName: "ListExpenditures",
		Query:  ListExpenditures_Operation,
		Variables: &__ListExpendituresInput{
			Since: since,
			Until: until,
			First: first,
		},
	}
	var err_ error

	var data_ ListExpendituresResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by UpdateBudget.
const UpdateBudget_Operation = `
mutation UpdateBudget ($id: ID!, $name: String, $incomes: [IncomeInput], $expenses: [ExpenseInput]) {
	updateBudget(input: {id:$id,name:$name,incomes:$incomes,expenses:$expenses}) {
		id
		owner
		name
		incomes {
			source
			amount
		}
		expenses {
			category
			amount
			isFixed
			isSlack
		}
	}
}
`

func UpdateBudget(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
	name string,
	incomes []IncomeInput,
	expenses []ExpenseInput,
) (*UpdateBudgetResponse, error) {
	req_ := &graphql.Request{
		OpName: "UpdateBudget",
		Query:  UpdateBudget_Operation,
		Variables: &__UpdateBudgetInput{
			Id:       id,
			Name:     name,
			Incomes:  incomes,
			Expenses: expenses,
		},
	}
	var err_ error

	var data_ UpdateBudgetResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
